{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madupa Dilshan\\\\Desktop\\\\project\\\\job-board-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All Categories');\n  const [categories, setCategories] = useState([]);\n\n  // Fetch jobs from backend\n  useEffect(() => {\n    const fetchJobs = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/jobs');\n        const data = await response.json();\n        setJobs(data);\n        setFilteredJobs(data); // Initially display all jobs\n        // Extract unique categories for the dropdown\n        const uniqueCategories = ['All Categories', ...new Set(data.map(job => job.category))];\n        setCategories(uniqueCategories);\n      } catch (err) {\n        setError('Failed to fetch jobs');\n        console.error('Error fetching jobs:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, []);\n\n  // Filter jobs based on search term and category\n  useEffect(() => {\n    let filtered = jobs.filter(job => {\n      return job.title.toLowerCase().includes(searchTerm.toLowerCase()) && (selectedCategory === 'All Categories' || job.category === selectedCategory);\n    });\n    setFilteredJobs(filtered);\n  }, [searchTerm, selectedCategory, jobs]);\n\n  // Handle category change\n  const handleCategoryChange = e => {\n    setSelectedCategory(e.target.value);\n  };\n\n  // Handle search input change\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading jobs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by job title...\",\n        value: searchTerm,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredJobs.length > 0 ? filteredJobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"job-listing\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 18\n          }, this), \" \", job.company]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 18\n          }, this), \" \", job.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 18\n          }, this), \" \", job.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 18\n          }, this), \" \", job.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No jobs available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"De2O7aRS36NfKjNL9sIPJALVmmY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","jobs","setJobs","filteredJobs","setFilteredJobs","loading","setLoading","error","setError","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","categories","setCategories","fetchJobs","response","fetch","data","json","uniqueCategories","Set","map","job","category","err","console","filtered","filter","title","toLowerCase","includes","handleCategoryChange","e","target","value","handleSearchChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","index","length","company","location","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/Madupa Dilshan/Desktop/project/job-board-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All Categories');\n  const [categories, setCategories] = useState([]);\n\n  // Fetch jobs from backend\n  useEffect(() => {\n    const fetchJobs = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/jobs');\n        const data = await response.json();\n        setJobs(data);\n        setFilteredJobs(data); // Initially display all jobs\n        // Extract unique categories for the dropdown\n        const uniqueCategories = [\n          'All Categories',\n          ...new Set(data.map((job) => job.category)),\n        ];\n        setCategories(uniqueCategories);\n      } catch (err) {\n        setError('Failed to fetch jobs');\n        console.error('Error fetching jobs:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchJobs();\n  }, []);\n\n  // Filter jobs based on search term and category\n  useEffect(() => {\n    let filtered = jobs.filter((job) => {\n      return (\n        job.title.toLowerCase().includes(searchTerm.toLowerCase()) &&\n        (selectedCategory === 'All Categories' || job.category === selectedCategory)\n      );\n    });\n    setFilteredJobs(filtered);\n  }, [searchTerm, selectedCategory, jobs]);\n\n  // Handle category change\n  const handleCategoryChange = (e) => {\n    setSelectedCategory(e.target.value);\n  };\n\n  // Handle search input change\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <div className=\"spinner\"></div> {/* You can style this as a spinner */}\n        <p>Loading jobs...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Job Board</h1>\n\n      {/* Search Bar */}\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by job title...\"\n          value={searchTerm}\n          onChange={handleSearchChange}\n        />\n      </div>\n\n      {/* Category Filter */}\n      <div className=\"filter-container\">\n        <select value={selectedCategory} onChange={handleCategoryChange}>\n          {categories.map((category, index) => (\n            <option key={index} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Job Listings */}\n      <ul>\n        {filteredJobs.length > 0 ? (\n          filteredJobs.map((job) => (\n            <li key={job._id} className=\"job-listing\">\n              <h2>{job.title}</h2>\n              <p><strong>Company:</strong> {job.company}</p>\n              <p><strong>Location:</strong> {job.location}</p>\n              <p><strong>Description:</strong> {job.description}</p>\n              <p><strong>Category:</strong> {job.category}</p>\n            </li>\n          ))\n        ) : (\n          <li>No jobs available</li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}