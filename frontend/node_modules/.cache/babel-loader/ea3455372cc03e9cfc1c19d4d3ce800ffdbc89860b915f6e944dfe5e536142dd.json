{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madupa Dilshan\\\\Desktop\\\\project\\\\job-board-app\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Dashboard.css'; // Create this file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  role\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [applications, setApplications] = useState([]);\n  const [postedJobs, setPostedJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          navigate('/login');\n          return;\n        }\n\n        // Fetch user data\n        const userResponse = await axios.get('http://localhost:5000/api/auth/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserData(userResponse.data.user);\n\n        // Role-specific data fetching\n        if (role === 'jobSeeker') {\n          const appsResponse = await axios.get('http://localhost:5000/api/applications/my', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setApplications(appsResponse.data.applications);\n        } else if (role === 'company') {\n          const jobsResponse = await axios.get('http://localhost:5000/api/jobs/my', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setPostedJobs(jobsResponse.data.jobs);\n        }\n        setLoading(false);\n      } catch (error) {\n        setError('Failed to load dashboard data');\n        setLoading(false);\n        console.error('Dashboard error:', error);\n      }\n    };\n    fetchData();\n  }, [role, navigate]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading dashboard...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", userData === null || userData === void 0 ? void 0 : userData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), role === 'jobSeeker' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-seeker-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), applications.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"applications-list\",\n        children: applications.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"application-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: app.job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", app.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Applied on: \", new Date(app.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, app._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You haven't applied to any jobs yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Posted Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), postedJobs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobs-list\",\n        children: postedJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [job.location, \" \\u2022 \", job.salary]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/job-applications/${job._id}`),\n            children: \"View Applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this)]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You haven't posted any jobs yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/post-job'),\n        className: \"post-job-btn\",\n        children: \"Post New Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"2GWYugf31nkMxIv1tDpjx9ARZwU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Dashboard","role","_s","userData","setUserData","applications","setApplications","postedJobs","setPostedJobs","loading","setLoading","error","setError","navigate","fetchData","token","localStorage","getItem","userResponse","get","headers","Authorization","data","user","appsResponse","jobsResponse","jobs","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","length","map","app","job","title","status","Date","createdAt","toLocaleDateString","_id","location","salary","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Madupa Dilshan/Desktop/project/job-board-app/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Dashboard.css'; // Create this file for styling\r\n\r\nconst Dashboard = ({ role }) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [applications, setApplications] = useState([]);\r\n  const [postedJobs, setPostedJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n\r\n        // Fetch user data\r\n        const userResponse = await axios.get('http://localhost:5000/api/auth/me', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setUserData(userResponse.data.user);\r\n\r\n        // Role-specific data fetching\r\n        if (role === 'jobSeeker') {\r\n          const appsResponse = await axios.get('http://localhost:5000/api/applications/my', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          setApplications(appsResponse.data.applications);\r\n        } else if (role === 'company') {\r\n          const jobsResponse = await axios.get('http://localhost:5000/api/jobs/my', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          setPostedJobs(jobsResponse.data.jobs);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError('Failed to load dashboard data');\r\n        setLoading(false);\r\n        console.error('Dashboard error:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [role, navigate]);\r\n\r\n  if (loading) return <div className=\"loading\">Loading dashboard...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Welcome, {userData?.name}</h2>\r\n      \r\n      {role === 'jobSeeker' ? (\r\n        <div className=\"job-seeker-dashboard\">\r\n          <h3>Your Applications</h3>\r\n          {applications.length > 0 ? (\r\n            <div className=\"applications-list\">\r\n              {applications.map(app => (\r\n                <div key={app._id} className=\"application-card\">\r\n                  <h4>{app.job.title}</h4>\r\n                  <p>Status: {app.status}</p>\r\n                  <p>Applied on: {new Date(app.createdAt).toLocaleDateString()}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p>You haven't applied to any jobs yet.</p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"company-dashboard\">\r\n          <h3>Your Posted Jobs</h3>\r\n          {postedJobs.length > 0 ? (\r\n            <div className=\"jobs-list\">\r\n              {postedJobs.map(job => (\r\n                <div key={job._id} className=\"job-card\">\r\n                  <h4>{job.title}</h4>\r\n                  <p>{job.location} • {job.salary}</p>\r\n                  <button onClick={() => navigate(`/job-applications/${job._id}`)}>\r\n                    View Applications\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p>You haven't posted any jobs yet.</p>\r\n          )}\r\n          <button \r\n            onClick={() => navigate('/post-job')}\r\n            className=\"post-job-btn\"\r\n          >\r\n            Post New Job\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACVF,QAAQ,CAAC,QAAQ,CAAC;UAClB;QACF;;QAEA;QACA,MAAMK,YAAY,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,mCAAmC,EAAE;UACxEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFX,WAAW,CAACc,YAAY,CAACI,IAAI,CAACC,IAAI,CAAC;;QAEnC;QACA,IAAItB,IAAI,KAAK,WAAW,EAAE;UACxB,MAAMuB,YAAY,GAAG,MAAM5B,KAAK,CAACuB,GAAG,CAAC,2CAA2C,EAAE;YAChFC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUN,KAAK;YAAG;UAC9C,CAAC,CAAC;UACFT,eAAe,CAACkB,YAAY,CAACF,IAAI,CAACjB,YAAY,CAAC;QACjD,CAAC,MAAM,IAAIJ,IAAI,KAAK,SAAS,EAAE;UAC7B,MAAMwB,YAAY,GAAG,MAAM7B,KAAK,CAACuB,GAAG,CAAC,mCAAmC,EAAE;YACxEC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUN,KAAK;YAAG;UAC9C,CAAC,CAAC;UACFP,aAAa,CAACiB,YAAY,CAACH,IAAI,CAACI,IAAI,CAAC;QACvC;QAEAhB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAAC,+BAA+B,CAAC;QACzCF,UAAU,CAAC,KAAK,CAAC;QACjBiB,OAAO,CAAChB,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACb,IAAI,EAAEY,QAAQ,CAAC,CAAC;EAEpB,IAAIJ,OAAO,EAAE,oBAAOV,OAAA;IAAK6B,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACvE,IAAItB,KAAK,EAAE,oBAAOZ,OAAA;IAAK6B,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAElB;EAAK;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEtD,oBACElC,OAAA;IAAK6B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC9B,OAAA;MAAA8B,QAAA,GAAI,WAAS,EAAC1B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE+B,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAEjChC,IAAI,KAAK,WAAW,gBACnBF,OAAA;MAAK6B,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnC9B,OAAA;QAAA8B,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzB5B,YAAY,CAAC8B,MAAM,GAAG,CAAC,gBACtBpC,OAAA;QAAK6B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BxB,YAAY,CAAC+B,GAAG,CAACC,GAAG,iBACnBtC,OAAA;UAAmB6B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7C9B,OAAA;YAAA8B,QAAA,EAAKQ,GAAG,CAACC,GAAG,CAACC;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBlC,OAAA;YAAA8B,QAAA,GAAG,UAAQ,EAACQ,GAAG,CAACG,MAAM;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BlC,OAAA;YAAA8B,QAAA,GAAG,cAAY,EAAC,IAAIY,IAAI,CAACJ,GAAG,CAACK,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAHzDI,GAAG,CAACO,GAAG;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIZ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAENlC,OAAA;QAAA8B,QAAA,EAAG;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC3C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,gBAENlC,OAAA;MAAK6B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC9B,OAAA;QAAA8B,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxB1B,UAAU,CAAC4B,MAAM,GAAG,CAAC,gBACpBpC,OAAA;QAAK6B,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBtB,UAAU,CAAC6B,GAAG,CAACE,GAAG,iBACjBvC,OAAA;UAAmB6B,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACrC9B,OAAA;YAAA8B,QAAA,EAAKS,GAAG,CAACC;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBlC,OAAA;YAAA8B,QAAA,GAAIS,GAAG,CAACO,QAAQ,EAAC,UAAG,EAACP,GAAG,CAACQ,MAAM;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpClC,OAAA;YAAQgD,OAAO,EAAEA,CAAA,KAAMlC,QAAQ,CAAC,qBAAqByB,GAAG,CAACM,GAAG,EAAE,CAAE;YAAAf,QAAA,EAAC;UAEjE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GALDK,GAAG,CAACM,GAAG;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAENlC,OAAA;QAAA8B,QAAA,EAAG;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACvC,eACDlC,OAAA;QACEgD,OAAO,EAAEA,CAAA,KAAMlC,QAAQ,CAAC,WAAW,CAAE;QACrCe,SAAS,EAAC,cAAc;QAAAC,QAAA,EACzB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAnGIF,SAAS;EAAA,QAMIH,WAAW;AAAA;AAAAmD,EAAA,GANxBhD,SAAS;AAqGf,eAAeA,SAAS;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}