{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madupa Dilshan\\\\Desktop\\\\project\\\\job-board-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All Categories');\n  const [categories, setCategories] = useState([]);\n  const [newJob, setNewJob] = useState({\n    title: '',\n    company: '',\n    category: '',\n    description: '',\n    location: ''\n  });\n  const [application, setApplication] = useState({\n    jobId: '',\n    applicantName: '',\n    applicantEmail: '',\n    resume: ''\n  });\n  useEffect(() => {\n    const fetchJobs = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/jobs');\n        const data = await response.json();\n        setJobs(data);\n        setFilteredJobs(data);\n        const uniqueCategories = ['All Categories', ...new Set(data.map(job => job.category))];\n        setCategories(uniqueCategories);\n      } catch (err) {\n        setError('Failed to fetch jobs');\n        console.error('Error fetching jobs:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, []);\n  useEffect(() => {\n    let filtered = jobs.filter(job => {\n      return job.title.toLowerCase().includes(searchTerm.toLowerCase()) && (selectedCategory === 'All Categories' || job.category === selectedCategory);\n    });\n    setFilteredJobs(filtered);\n  }, [searchTerm, selectedCategory, jobs]);\n  const handleCategoryChange = e => {\n    setSelectedCategory(e.target.value);\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleJobInputChange = e => {\n    setNewJob({\n      ...newJob,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleApplicationChange = e => {\n    setApplication({\n      ...application,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmitJob = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/jobs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newJob)\n      });\n      const data = await response.json();\n      setJobs([...jobs, data]); // Add the new job to the list\n    } catch (err) {\n      console.error('Error posting job:', err);\n    }\n  };\n  const handleSubmitApplication = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/applications', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(application)\n      });\n      const data = await response.json();\n      alert('Application submitted successfully!');\n    } catch (err) {\n      console.error('Error submitting application:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitJob,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post a Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Job Title\",\n        onChange: handleJobInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"company\",\n        placeholder: \"Company\",\n        onChange: handleJobInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        placeholder: \"Category\",\n        onChange: handleJobInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Job Description\",\n        onChange: handleJobInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        placeholder: \"Location\",\n        onChange: handleJobInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by job title...\",\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCategoryChange,\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredJobs.length > 0 ? filteredJobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitApplication,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"applicantName\",\n            placeholder: \"Your Name\",\n            onChange: handleApplicationChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"applicantEmail\",\n            placeholder: \"Your Email\",\n            onChange: handleApplicationChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"resume\",\n            placeholder: \"Resume URL\",\n            onChange: handleApplicationChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No jobs available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s9+as/3Po4R4+YoYsl5ez2TLLKM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","jobs","setJobs","filteredJobs","setFilteredJobs","loading","setLoading","error","setError","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","categories","setCategories","newJob","setNewJob","title","company","category","description","location","application","setApplication","jobId","applicantName","applicantEmail","resume","fetchJobs","response","fetch","data","json","uniqueCategories","Set","map","job","err","console","filtered","filter","toLowerCase","includes","handleCategoryChange","e","target","value","handleSearchChange","handleJobInputChange","name","handleApplicationChange","handleSubmitJob","preventDefault","method","headers","body","JSON","stringify","handleSubmitApplication","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","onChange","required","index","length","_id","_c","$RefreshReg$"],"sources":["C:/Users/Madupa Dilshan/Desktop/project/job-board-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All Categories');\n  const [categories, setCategories] = useState([]);\n  const [newJob, setNewJob] = useState({\n    title: '',\n    company: '',\n    category: '',\n    description: '',\n    location: '',\n  });\n  const [application, setApplication] = useState({\n    jobId: '',\n    applicantName: '',\n    applicantEmail: '',\n    resume: '',\n  });\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:5000/api/jobs');\n        const data = await response.json();\n        setJobs(data);\n        setFilteredJobs(data);\n        const uniqueCategories = [\n          'All Categories',\n          ...new Set(data.map((job) => job.category)),\n        ];\n        setCategories(uniqueCategories);\n      } catch (err) {\n        setError('Failed to fetch jobs');\n        console.error('Error fetching jobs:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchJobs();\n  }, []);\n\n  useEffect(() => {\n    let filtered = jobs.filter((job) => {\n      return (\n        job.title.toLowerCase().includes(searchTerm.toLowerCase()) &&\n        (selectedCategory === 'All Categories' || job.category === selectedCategory)\n      );\n    });\n    setFilteredJobs(filtered);\n  }, [searchTerm, selectedCategory, jobs]);\n\n  const handleCategoryChange = (e) => {\n    setSelectedCategory(e.target.value);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleJobInputChange = (e) => {\n    setNewJob({ ...newJob, [e.target.name]: e.target.value });\n  };\n\n  const handleApplicationChange = (e) => {\n    setApplication({ ...application, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmitJob = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/jobs', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newJob),\n      });\n      const data = await response.json();\n      setJobs([...jobs, data]); // Add the new job to the list\n    } catch (err) {\n      console.error('Error posting job:', err);\n    }\n  };\n\n  const handleSubmitApplication = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/applications', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(application),\n      });\n      const data = await response.json();\n      alert('Application submitted successfully!');\n    } catch (err) {\n      console.error('Error submitting application:', err);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Job Board</h1>\n\n      {/* Job Posting Form (For Companies) */}\n      <form onSubmit={handleSubmitJob}>\n        <h2>Post a Job</h2>\n        <input type=\"text\" name=\"title\" placeholder=\"Job Title\" onChange={handleJobInputChange} required />\n        <input type=\"text\" name=\"company\" placeholder=\"Company\" onChange={handleJobInputChange} required />\n        <input type=\"text\" name=\"category\" placeholder=\"Category\" onChange={handleJobInputChange} required />\n        <textarea name=\"description\" placeholder=\"Job Description\" onChange={handleJobInputChange} required />\n        <input type=\"text\" name=\"location\" placeholder=\"Location\" onChange={handleJobInputChange} required />\n        <button type=\"submit\">Post Job</button>\n      </form>\n\n      {/* Job Search and Filter */}\n      <div>\n        <input type=\"text\" placeholder=\"Search by job title...\" onChange={handleSearchChange} />\n        <select onChange={handleCategoryChange}>\n          {categories.map((category, index) => (\n            <option key={index} value={category}>{category}</option>\n          ))}\n        </select>\n      </div>\n\n      {/* List of Jobs */}\n      <ul>\n        {filteredJobs.length > 0 ? (\n          filteredJobs.map((job) => (\n            <li key={job._id}>\n              <h3>{job.title}</h3>\n              <p>{job.company}</p>\n              <p>{job.location}</p>\n              <p>{job.description}</p>\n              <p>{job.category}</p>\n              <form onSubmit={handleSubmitApplication}>\n                <input type=\"text\" name=\"applicantName\" placeholder=\"Your Name\" onChange={handleApplicationChange} required />\n                <input type=\"email\" name=\"applicantEmail\" placeholder=\"Your Email\" onChange={handleApplicationChange} required />\n                <input type=\"text\" name=\"resume\" placeholder=\"Resume URL\" onChange={handleApplicationChange} required />\n                <button type=\"submit\">Apply</button>\n              </form>\n            </li>\n          ))\n        ) : (\n          <li>No jobs available</li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}